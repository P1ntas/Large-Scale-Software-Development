{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "title": "System View",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PostgreSQL"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "Maintenance Required": {
                  "color": "yellow",
                  "index": 2
                },
                "Offline": {
                  "color": "red",
                  "index": 3
                },
                "Online": {
                  "color": "green",
                  "index": 0
                },
                "Working": {
                  "color": "blue",
                  "index": 1
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 4,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^status$/",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "10.1.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PostgreSQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select status from system s where id = $system_id ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PostgreSQL"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Key"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 118
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 4,
        "x": 0,
        "y": 4
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false,
        "sortBy": []
      },
      "pluginVersion": "10.1.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PostgreSQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT 'Name' AS \"Key\", sm.name::text AS \"Value\" FROM system s\r\nINNER JOIN system_model sm ON sm.id = s.system_model_id\r\nWHERE s.id = $system_id\r\n\r\nUNION ALL\r\n\r\nSELECT 'Manufacturer' AS \"Key\", sm.manufacturer::text AS \"Value\" FROM system s\r\nINNER JOIN system_model sm ON sm.id = s.system_model_id\r\nWHERE s.id = $system_id\r\n\r\nUNION ALL\r\n\r\nSELECT 'Type' AS \"Key\", sm.type::text AS \"Value\" FROM system s\r\nINNER JOIN system_model sm ON sm.id = s.system_model_id\r\nWHERE s.id = $system_id\r\n\r\nUNION ALL\r\n\r\nSELECT 'Expansions' AS \"Key\", COUNT(e.id)::text AS \"Value\" FROM system s\r\nLEFT JOIN expansion e ON e.system_id = s.id\r\nWHERE s.id = $system_id;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "System Information",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PostgreSQL"
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 4,
        "y": 4
      },
      "id": 6,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "let all_data = [];\nlet colorMap = {\n  'Expansions Online': '#91cc75',\n  'Expansions Working': '#5470c6',\n  'Expansions Requiring Maintenance': '#fac858',\n  'Expansions Offline': '#ee6666'\n};\n\ndata.series.forEach((s) => {\n  ['Expansions Online', 'Expansions Working', 'Expansions Requiring Maintenance', 'Expansions Offline'].forEach((status) => {\n    let value = s.fields.find((f) => f.name === status).values;\n    if (value > 0) {\n      all_data.push({ value, name: status, color: colorMap[status] });\n    }\n  });\n});\n\n// Sort the data for the chart by value in descending order\nall_data.sort((a, b) => b.value - a.value);\n\n// Define a custom order for the legend data\nconst customLegendOrder = ['Expansions Online', 'Expansions Working', 'Expansions Requiring Maintenance', 'Expansions Offline'];\n\n// Use the custom order for the legend data\nlet legendData = customLegendOrder.filter((item) => all_data.some((data) => data.name === item));\n\n// Use the all_data array for your chart\nreturn {\n  title: {\n    text: 'Expansion Status v3',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b}: {c} ({d}%)'\n  },\n  legend: {\n    orient: 'horizontal',\n    bottom: 10,\n    data: legendData // Use custom ordered legend data\n  },\n  series: [\n    {\n      name: 'System Status',\n      type: 'pie',\n      radius: '50%',\n      data: all_data, // Use all_data for your chart\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      },\n      // Set item color based on the color property in all_data\n      itemStyle: {\n        color: (params) => params.data.color\n      }\n    }\n  ]\n};\n",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        }
      },
      "pluginVersion": "10.1.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PostgreSQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\r\n    SUM(CASE WHEN expansion.status = 'Online' THEN 1 ELSE 0 END) AS \"Expansions Online\",\r\n    SUM(CASE WHEN expansion.status = 'Working' THEN 1 ELSE 0 END) AS \"Expansions Working\",\r\n    SUM(CASE WHEN expansion.status = 'Maintenance Required' THEN 1 ELSE 0 END) AS \"Expansions Requiring Maintenance\",\r\n    SUM(CASE WHEN expansion.status = 'Offline' THEN 1 ELSE 0 END) AS \"Expansions Offline\"\r\nFROM system\r\nINNER JOIN expansion ON system.id = expansion.system_id\r\nWHERE system.id = $system_id \r\n\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PCC52D03280B7034C"
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 10,
        "y": 4
      },
      "id": 48,
      "options": {
        "dedupStrategy": "none",
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": false,
        "sortOrder": "Descending",
        "wrapLogMessage": false
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PCC52D03280B7034C"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\r\n    timestamp AS \"time\",\r\n    s.id AS \"sensor_id\",\r\n    s.status AS \"sensor_status\"\r\nFROM\r\n    sensor s\r\nJOIN\r\n    expansion e ON s.expansion_id = e.id\r\nJOIN\r\n    system sys ON e.system_id = sys.id\r\nJOIN\r\n    factory f ON sys.factory_id = f.id\r\nWHERE\r\n    timestamp >= $__timeFrom() AND timestamp <= $__timeTo()\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Status Logs",
      "type": "logs"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 3,
      "panels": [],
      "repeat": "expansion_id",
      "repeatDirection": "h",
      "title": "Expansion $expansion_id",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PostgreSQL"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Key"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 117
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 4,
        "x": 0,
        "y": 14
      },
      "id": 7,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false,
        "sortBy": []
      },
      "pluginVersion": "10.1.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PostgreSQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT 'Name' AS \"Key\", em.name::text AS \"Value\" FROM expansion e\r\nINNER JOIN expansion_model em ON em.id = e.expansion_model_id\r\nWHERE e.id in ($expansion_id)\r\n\r\nUNION ALL\r\n\r\nSELECT 'Manufacturer' AS \"Key\", em.manufacturer::text AS \"Value\" FROM expansion e\r\nINNER JOIN expansion_model em ON em.id = e.expansion_model_id\r\nWHERE e.id in ($expansion_id)\r\n\r\nUNION ALL\r\n\r\nSELECT 'Type' AS \"Key\", em.type::text AS \"Value\" FROM expansion e\r\nINNER JOIN expansion_model em ON em.id = e.expansion_model_id\r\nWHERE e.id in ($expansion_id)\r\n\r\nUNION ALL\r\n\r\nSELECT 'Sensors' AS \"Key\", COUNT(s.id)::text AS \"Value\" FROM sensor s\r\nWHERE s.expansion_id in ($expansion_id);\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Expansion",
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "Prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "green",
                "value": 30
              },
              {
                "color": "red",
                "value": 62
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 10,
        "x": 4,
        "y": 14
      },
      "id": 29,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "disableTextWrap": false,
          "editorMode": "builder",
          "expr": "sensor_value{sensor_id=\"$expansion_id\"}",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "Prometheus"
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 14,
        "y": 14
      },
      "id": 31,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "let value = 0\ndata.series.forEach((s) => {\n  let values = s.fields.find((f) => f.name === 'sensor_value').values;\n  value = values[values.length - 1].toFixed(2);;\n});\n\n\nreturn {\n  tooltip: {\n    formatter: '{a} <br/>{b} : {c}%'\n  },\n  series: [\n    {\n      name: 'Flow Rate',\n      type: 'gauge',\n      detail: { formatter: '{value}%' },\n      data: [{ value: value, name: 'Flow Rate' }]\n    }\n  ]\n};\n",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "disableTextWrap": false,
          "editorMode": "builder",
          "expr": "sensor_value{sensor_id=\"$expansion_id\"}",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "Prometheus"
      },
      "gridPos": {
        "h": 12,
        "w": 5,
        "x": 19,
        "y": 14
      },
      "id": 32,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "let value = 0\ndata.series.forEach((s) => {\n  let values = s.fields.find((f) => f.name === 'sensor_value').values;\n  value = values[values.length - 1].toFixed(2);;\n});\n\n\nreturn {\n  title: { // Add a title here\n    text: 'Temperature',\n    left: 'center', // Center the title\n    bottom: '10%'\n  },\n  series: [\n    {\n      type: 'gauge',\n      axisLine: {\n        lineStyle: {\n          width: 30,\n          color: [\n            [0.15, '#fd666d'],\n            [0.3, '#fac858'],\n            [0.7, '#91cc75'],\n            [0.85, '#fac858'],\n            [1, '#fd666d']\n          ]\n        }\n      },\n      pointer: {\n        itemStyle: {\n          color: 'auto'\n        }\n      },\n      axisTick: {\n        distance: -30,\n        length: 8,\n        lineStyle: {\n          color: '#fff',\n          width: 2\n        }\n      },\n      splitLine: {\n        distance: -30,\n        length: 30,\n        lineStyle: {\n          color: '#fff',\n          width: 4\n        }\n      },\n      axisLabel: {\n        color: 'inherit',\n        distance: 40,\n        fontSize: 20\n      },\n      detail: {\n        valueAnimation: true,\n        formatter: '{value} ºC',\n        color: 'inherit',\n        fontSize: 25,\n      },\n      data: [\n        {\n          value: value,\n          fontSize: 20\n        }\n      ]\n    }\n  ]\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "disableTextWrap": false,
          "editorMode": "builder",
          "expr": "sensor_value{sensor_id=\"$expansion_id\"}",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A",
          "useBackend": false
        }
      ],
      "type": "volkovlabs-echarts-panel"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Continental",
          "value": "Continental"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PostgreSQL"
        },
        "definition": "select name from factory",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "factory_name",
        "options": [],
        "query": "select name from factory",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PostgreSQL"
        },
        "definition": "select id from factory where name in ('${factory_name:text}')",
        "hide": 2,
        "includeAll": false,
        "label": "Factory ID",
        "multi": false,
        "name": "factory_id",
        "options": [],
        "query": "select id from factory where name in ('${factory_name:text}')",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PostgreSQL"
        },
        "definition": "select s.id from system s\ninner join factory f on f.id = s.factory_id\nwhere f.id = $factory_id",
        "hide": 0,
        "includeAll": false,
        "label": "System",
        "multi": false,
        "name": "system_id",
        "options": [],
        "query": "select s.id from system s\ninner join factory f on f.id = s.factory_id\nwhere f.id = $factory_id",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "MPS 203 I4.0",
          "value": "MPS 203 I4.0"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PostgreSQL"
        },
        "definition": "select name from system_model sm\ninner join system s on s.system_model_id = sm.id\nwhere s.id = $system_id",
        "hide": 0,
        "includeAll": false,
        "label": "System Name",
        "multi": false,
        "name": "system_model_name",
        "options": [],
        "query": "select name from system_model sm\ninner join system s on s.system_model_id = sm.id\nwhere s.id = $system_id",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "auto",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PostgreSQL"
        },
        "definition": "select e.id from expansion e\ninner join system s on s.id = e.system_id\nwhere s.id = $system_id",
        "hide": 0,
        "includeAll": true,
        "label": "Expansion ID",
        "multi": false,
        "name": "expansion_id",
        "options": [],
        "query": "select e.id from expansion e\ninner join system s on s.id = e.system_id\nwhere s.id = $system_id",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PostgreSQL"
        },
        "definition": "select id from sensor where expansion_id in ($expansion_id)",
        "hide": 0,
        "includeAll": true,
        "label": "Sensor ID",
        "multi": true,
        "name": "sensor_id",
        "options": [],
        "query": "select id from sensor where expansion_id in ($expansion_id)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Systems View",
  "uid": "c7c8ba81-b8a4-4c6f-ae15-16bdb1dcf65b",
  "version": 3,
  "weekStart": ""
}
